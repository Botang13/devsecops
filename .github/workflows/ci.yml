name: CI - DevSecOps (Notes App)

on:
  push:
    branches: [ "main", "devsecops" ]
  pull_request:
    branches: [ "main", "devsecops" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write

env:
  PYTHON_VERSION: "3.12"
  IMAGE_NAME: "notes-app"

jobs:
  unit_test:
    name: Unit Test (pytest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r dev-requirements.txt
      - name: Run pytest
        run: pytest -q

  sast_bandit:
    name: SAST (Bandit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
      - run: |
          pip install bandit
          bandit -r app -ll -iii
    # Bandit: https://bandit.readthedocs.io/ :contentReference[oaicite:0]{index=0}

  sca_pip_audit:
    name: SCA (pip-audit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
      - run: |
          pip install pip-audit
          pip-audit -r requirements.txt
          pip-audit -r dev-requirements.txt
    # pip-audit exit code 1 jika ada vuln. :contentReference[oaicite:1]{index=1}

  secret_scan_gitleaks:
    name: Secret Scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --redact --exit-code 1
    # Gitleaks action & exit code. :contentReference[oaicite:2]{index=2}

  build_and_push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [unit_test, sast_bandit, sca_pip_audit, secret_scan_gitleaks]
    outputs:
      image: ${{ steps.meta.outputs.image }}
      sha: ${{ steps.meta.outputs.sha }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push (latest + sha)
        run: |
          IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}"
          SHA="${{ github.sha }}"
          docker buildx build --platform linux/amd64 \
            -t "$IMAGE:latest" \
            -t "$IMAGE:$SHA" \
            --push .
      - name: Export outputs
        id: meta
        run: |
          echo "image=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}" >> "$GITHUB_OUTPUT"
          echo "sha=${{ github.sha }}" >> "$GITHUB_OUTPUT"

  trivy_image_scan:
    name: Image Scan (Trivy from Docker Hub)
    runs-on: ubuntu-latest
    needs: [build_and_push]
    steps:
      - name: Scan image (HIGH,CRITICAL â†’ fail)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ needs.build_and_push.outputs.image }}:${{ needs.build_and_push.outputs.sha }}
          format: table
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'
    # Trivy action docs. :contentReference[oaicite:3]{index=3}